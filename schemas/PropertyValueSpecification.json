{
    "PropertyValueSpecification": {
        "type": "object",
        "properties": {
            "maxValue": {
                "description": "The upper value of some characteristic or property.",
                "type": "integer",
                "format": "int32"
            },
            "minValue": {
                "description": "The lower value of some characteristic or property.",
                "type": "integer",
                "format": "int32"
            },
            "valueName": {
                "description": "Indicates the name of the PropertyValueSpecification to be used in URL templates and form encoding in a manner analogous to HTML's input@name.",
                "type": "string"
            },
            "valueRequired": {
                "description": "Whether the property must be filled in to complete the action.  Default is false.",
                "type": "boolean"
            },
            "defaultValue": {
                "description": "The default value of the input.  For properties that expect a literal, the default is a literal value, for properties that expect an object, it's an ID reference to one of the current values.",
                "$ref": "Thing.json"
            },
            "readonlyValue": {
                "description": "Whether or not a property is mutable.  Default is false. Specifying this for a property that also has a value makes it act similar to a \"hidden\" input in an HTML form.",
                "type": "boolean"
            },
            "multipleValues": {
                "description": "Whether multiple values are allowed for the property.  Default is false.",
                "type": "boolean"
            },
            "valueMinLength": {
                "description": "Specifies the minimum allowed range for number of characters in a literal value.",
                "type": "integer",
                "format": "int32"
            },
            "valueMaxLength": {
                "description": "Specifies the allowed range for number of characters in a literal value.",
                "type": "integer",
                "format": "int32"
            },
            "valuePattern": {
                "description": "Specifies a regular expression for testing literal values according to the HTML spec.",
                "type": "string"
            },
            "stepValue": {
                "description": "The stepValue attribute indicates the granularity that is expected (and required) of the value in a PropertyValueSpecification.",
                "type": "integer",
                "format": "int32"
            }
        },
        "externalDocs": {
            "url": "http:\/\/schema.org\/PropertyValueSpecification",
            "description": "Schema.org resource"
        }
    }
}